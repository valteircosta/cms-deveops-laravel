version: "2.2"

services:
  app:
    build: .
    container_name: app
    volumes:
      - .:/var/www
    #Rede a qual perrence o containner
    networks:
      - app-network
    #Determina a condicao para levantar o serviço
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build: .docker/nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    networks:
      - app-network

  db:
    image: mysql:5.7
    #Comando que evita erros (Se não usar é muito choro e ranger de dentes para programador)
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    #Volume do banco de dados
    volumes:
      - ./.docker/db/mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks:
      - app-network
    healthcheck:
      test:
      # "exit 0"
        [
          "CMD-SHELL",
          'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;"',
        ]
      Intervalo se espera
      interval: 10s
      timeout: 10s
      #Quant de tentativas
      retries: 4

  redis:
    image: redis:alpine
    expose:
      - 6379
    networks:
      - app-network

#Construção da rede
networks:
  #Nome e configuração da rede
  app-network:
    driver: bridge
